server:
  port: ${PORT:8080}
  servlet:
    context-path: /api/v1

spring:
  application:
    name: sacco-banking-system
  datasource:
    url: ${NEON_DB_URL}
    username: ${NEON_DB_USERNAME}
    password: ${NEON_DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-timeout: 30000
      maximum-pool-size: 5  # Reduced for free tier
      minimum-idle: 1
      idle-timeout: 300000
      max-lifetime: 600000
      leak-detection-threshold: 60000
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false
        jdbc:
          batch_size: 25
        order_inserts: true
        order_updates: true

# JWT Configuration
jwt:
  secret: ${JWT_SECRET}
  expiration: ${JWT_EXPIRATION:86400000}

# M-Pesa Configuration
mpesa:
  api-url: ${MPESA_API_URL}
  consumer-key: ${MPESA_CONSUMER_KEY}
  consumer-secret: ${MPESA_CONSUMER_SECRET}
  passkey: ${MPESA_PASSKEY}
  shortcode: ${MPESA_SHORTCODE}

# Actuator for health checks
management:
  endpoints:
    web:
      exposure:
        include: health,info
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
  server:
    port: ${PORT:8080}

# Logging optimized for both Render and local testing
logging:
  level:
    com.sacco.banking: INFO
    org.springframework.security: WARN
    org.hibernate.SQL: DEBUG  # Enable for local testing
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"